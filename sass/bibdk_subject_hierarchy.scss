@import "_mixins";
@import "_fontawesome";
@import "susy";

/* FontAwesome
   ========================================================================== */

$fontAwesomePath:   "../font" !default;

@font-face {
  font-family: 'FontAwesome';
  src: url('#{$fontAwesomePath}/fontawesome-webfont.eot?v=3.0.1');
  src: url('#{$fontAwesomePath}/fontawesome-webfont.eot?#iefix&v=3.0.1') format("embedded-opentype"),
    url('#{$fontAwesomePath}/fontawesome-webfont.woff?v=3.0.1') format("woff"),
    url('#{$fontAwesomePath}/fontawesome-webfont.ttf?v=3.0.1') format("truetype");
  font-weight: normal;
  font-style: normal;
}


/* Spacing variables
   ========================================================================== */

$large-spacing:                   20px;


/* Font library
   ========================================================================== */

$base-icon-library-font:         "FontAwesome";


/* Colors variables
   ========================================================================== */

$white:                   #fff;
$darker-gray:             #999;
$dark-gray:               #333;


/* Font variables
   ========================================================================== */

$base-font-weight-bold:           600;
$font-size-reset:                 100%;
$font-size-large:                 130%;
$font-size-small:                 85%;


/* Module styles
   ========================================================================== */

.pane-bibdk-subject-hierarchy-bibdk-subject-hierarchy {
  margin: 20px 0;
  padding: 10px 20px;
  background-color: $white;

  &,
  a {
    font-size: $font-size-reset;
  }

  // Try to hide empty lists

  ul,
  li,
  a {
    &:empty {
      display: none;
    }
  }

  // Search title

  .header h1,
  .header h2 {
    font-size: font-size-large;
  }

  // Loading message

  .message {
    display: none;
  }

  // Title

  .pane-title {
    float: left;
  }

  // Loader

  .ajax-progress, .ajax-progress-throbber {
    position: relative;
    float: right;
    width: auto;
    height: auto;
    background: none;
  }

  .ajax-progress .throbber {
    width: $large-spacing;
    height: $large-spacing;
    font-size: 20px;
  }

  .themes__item p {
    @include min-height(85px);
    position: relative;
    margin: 0;
  }

  // Reset for ul

  ul {
    padding-left: 0;
  }

  // Search form

  #bibdk-subject-hierarchy-searchfield-form {
    float: right;
  }

  // Hide help text

  .bibdk-subject-hierarchy-header,
  .bibdk-subject-hierarchy-helptext {
    display: none;
  }

  // Subitems menu

  .themes__sublists__wrapper {
    display: none;
    float: left;
    width: 100%;
  }

  // Active item pointer

  #bibdk-subject-hierarchy .themes__item--active > p {
    text-decoration: underline;

    // Media x-large

    @include x-large() {
      @include min-height(85px);

      // Arrow

      &:after {
        position: absolute;
        bottom: 0;
        left: 50%;
        margin-left: -5px;
        width: 0;
        height: 0;
        border-width: 0 10px 10px;
        border-style: solid;
        border-color: transparent transparent $darker-gray;
        content: '';
      }
    }
  }

  .themes__sublists {
    position: relative;
    margin-bottom: 30px;
    padding: 15px;
    border: solid 5px $darker-gray;
    background-color: $white;

    // Media large-x-large

    @include large-x-large() {
      li {
        display: inline-block;
        margin-right: -4px;
        margin-bottom: 5px;
        width: 25%;
        vertical-align: top;
      }

      a {
        display: block;
        padding-right: 15px;
      }
    }
  }

  // Close button

  .themes__close-button {
    position: absolute;
    top: 18px;
    right: 10px;
    display: inline-block;
    cursor: pointer;
  }

  .icon-blue-x:before {
    color: $dark-gray;
    content: '\f05c';
    font-size: 18px;
  }

  // Breadcrumbs

  .bibdk-subject-hierarchy-searchresult .themes__breadcrumb {
    margin-bottom: 0;
  }

  .themes__breadcrumb {
    margin-right: $large-spacing;
    margin-bottom: $large-spacing;

    a {
      display: inline-block;

      &:hover {
        text-decoration: none;
      }

      &:last-child {
        font-weight: $base-font-weight-bold;
      }

      // Separator icon

      &:before {
        margin-right: 10px;
        color: $dark-gray;
        content: '\f105';
        font-weight: $base-font-weight-bold;
        font-family: 'FontAwesome';
      }

      &:first-of-type:before {
        margin-right: 0;
        content: '';
      }
    }
  }

  // Subitems popup

  .themes__sublist {
    clear: both;
    margin-bottom: 20px;

    li {
      overflow: hidden;
    }

    // Spinner

    .ajax-progress,
    .ajax-progress-throbber {
      float: left;
    }

    a {
      float: left;

      // Collapsed state

      &:hover {
        text-decoration: none;
      }

      // Expand icon

      &.nesting:after {
        margin-left: 10px;
        color: $dark-gray;
        content: '\f055';
        font-weight: $base-font-weight-bold;
        font-family: 'FontAwesome';
      }

      // Spinner icon position

      .throbber {
        left: 0;
      }
    }
  }

  // Search form

  .subject-hierarchy-searchfield {
    text-align: right;
  }

  // Search bar

  .searchfield-submit,
  .form-item-search-hierarchy-input {
    display: inline-block;

    input {
      margin: 0;
      text-transform: capitalize;
    }
  }

  // Submit button

  .searchfield-submit {
    @include min-height(42px);
    text-transform: capitalize;
  }

  .form-item-search-hierarchy-input {
    box-sizing: border-box;
    float: left;
    margin-right: 10px;

    input {
      width: 100%;
    }
  }

  // Columns

  .themes_row {

    // Media medium

    @include medium() {
      @include span(1 of 2);

      &:nth-of-type(2n + 2) {
        @include omega();
      }
    }

    .header a {
      display: block;
      font-weight: $base-font-weight-bold;
    }

    .note {
      position: relative;

      a {
        font-size: $font-size-small;
      }
    }

    // Grid setup

    .themes__item {

      // Media large-x-large

      @include large-x-large() {
        @include span(1 of 4);

        &:nth-of-type(4n + 4) {
          @include omega();
        }
      }
    }
  }
}
